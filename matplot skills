# 绘制坐标轴为箭头的图


import matplotlib.pyplot as plt
import mpl_toolkits.axisartist as axisartist
import numpy as np

# 创建画布
fig = plt.figure(figsize=(10, 6))
# 使用axisartist.Subplot方法创建一个绘图区对象ax
ax = axisartist.Subplot(fig, 111)
# 将绘图区对象添加到画布中
fig.add_axes(ax)

# 通过set_axisline_style方法设置绘图区的底部及左侧坐标轴样式
# "-|>"代表实心箭头："->"代表空心箭头
ax.axis["bottom"].set_axisline_style("-|>", size=1.5)
ax.axis["left"].set_axisline_style("-|>", size=1.5)
# 通过set_visible方法设置绘图区的顶部及右侧坐标轴隐藏
ax.axis["top"].set_visible(False)
ax.axis["right"].set_visible(False)

# 数据
x = np.linspace(1, 10, 500)  # Size of the system, 500 points for smoothness
y = 2**x  # Number of states

# 绘制图形
ax.plot(x, y, color='blue', linewidth=2)

# 设置标题
#plt.title("Exponential Growth: $2^n$")

# 隐藏坐标轴上的数字
ax.set_xticks([])
ax.set_yticks([])

# 设置轴标签
ax.set_xlabel("Size of the system", position=(1, 0.5))
ax.set_ylabel("Number of states", position=(0.5, 1))

# 设置坐标轴范围
ax.set_xlim(1, 10)
ax.set_ylim(2, 2**10)

# 显示图形
plt.tight_layout()
plt.show()


############################################################################################


# 绘制路径规划地图
import matplotlib.pyplot as plt
import matplotlib.patches as patches

# 定义坐标
not_position = [(0.5,5.5), (5.5,6.5),(1.5,1.5),(1.5,3.5),(8.5,0.5),(8.5,3.5),(5.5,1.5),(7.5,7.5),(9.5,6.5),(2.5,5.5)]
job_position = [[([0.5], [6.5])], [([3.5, 0.5], [9.5, 8.5])], [([0.5], [2.5])], [([4.5, 3.5], [1.5, 2.5])], [([6.5, 8.5, 4.5], [9.5, 1.5, 8.5])]]
final_position = [[([2.5], [6.5])], [([7.5, 8.5], [3.5, 2.5])]]
paths = [[([6.5, 6.5, 5.5, 4.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5, 3.5], [8.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5])], [([6.5, 5.5, 5.5, 4.5, 3.5, 2.5, 1.5, 0.5, 0.5, 0.5, 0.5], [3.5, 3.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5])], [([6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 7.5, 7.5], [4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 3.5])], [([8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5, 8.5], [9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5, 9.5])], [([5.5, 5.5, 5.5, 5.5, 4.5, 4.5, 3.5, 2.5, 1.5, 0.5, 1.5, 2.5], [5.5, 5.5, 5.5, 5.5, 5.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5, 6.5])]]


# 创建一个10x10的栅格地图
fig, ax = plt.subplots(figsize=(10, 10))
for i in range(11):
    ax.axhline(i, color='gray', linestyle='dashed')
    ax.axvline(i, color='gray', linestyle='dashed')

# 为最外侧添加黑色框线
for i in [0, 10]:
    ax.axhline(i, color='black')
    ax.axvline(i, color='black')

# 根据坐标上色
for x, y in not_position:
    rect = patches.Rectangle((x-0.49, y-0.495), 0.985, 0.985, linewidth=0, edgecolor=(116/255, 127/255, 127/255), facecolor=(116/255, 127/255, 127/255))
    ax.add_patch(rect)

#(116/255, 127/255, 127/255),(27/255, 127/255, 121/255),(0, 204/255, 192/255),(114/255, 242/255, 235/255),(255/255, 72/255, 88/255),(140/255, 31/255, 40/255),(227/255, 199/255, 95/255),(3/255, 120/255, 166/255),(90/255, 115/255, 191/255)

colors = [(27/255, 127/255, 121/255), (0, 204/255, 192/255), (114/255, 242/255, 235/255), (255/255, 72/255, 88/255), (140/255, 31/255, 40/255), (227/255, 199/255, 95/255), (3/255, 120/255, 166/255)]
for idx, pos in enumerate(job_position + final_position):
    for x_list, y_list in pos:
        for x, y in zip(x_list, y_list):
            rect = patches.Rectangle((x-0.49, y-0.495), 0.985, 0.985, linewidth=0, edgecolor=colors[idx % len(colors)], facecolor=colors[idx % len(colors)])
            ax.add_patch(rect)

# # 绘制路径
# path_colors = [(1, 0, 0), (0, 1, 0), (0, 0, 1), (1, 1, 0), (1, 0, 1)]
# for idx, path in enumerate(paths):
#     for x_list, y_list in path:
#         ax.plot(x_list, y_list, color=path_colors[idx], linestyle='dashed', marker='o')

# 显示图形
ax.set_xlim(0, 10)
ax.set_ylim(0, 10)
ax.set_aspect('equal')
plt.show()



##########################################################################################
